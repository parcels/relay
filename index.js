// Generated by CoffeeScript 1.7.1
(function() {
  var Q, app, dotenv, express, fetchRussianPost, fetchUSPS, http, port, soap, wsdl, xml2js;

  dotenv = require('dotenv');

  dotenv.load();

  express = require('express');

  app = express();

  app.use(express.compress());

  soap = require('soap');

  Q = require('q');

  http = require('q-io/http');

  xml2js = require('xml2json');

  fetchRussianPost = function(client) {
    return function(req, res) {
      var message;
      message = {
        Barcode: req.params.barcode,
        MessageType: 0
      };
      return Q.nfcall(client.GetOperationHistory, message).then(function(result) {
        if (result) {
          return res.json(result);
        } else {
          return res.send(404);
        }
      })["catch"](function(err) {
        console.error(err);
        return res.json(500, {
          error: err
        });
      });
    };
  };

  fetchUSPS = function(req, res) {
    var query, url;
    query = "<TrackFieldRequest USERID=\"" + process.env.USPS_USER_ID + "\"> <TrackID ID=\"" + req.params.barcode + "\"></TrackID> </TrackFieldRequest>";
    url = "http://production.shippingapis.com/ShippingAPI.dll?API=TrackV2&XML=" + query;
    return http.request(url).then(function(response) {
      return response.body.read();
    }).then(function(body) {
      return res.json(xml2js.toJson(body, {
        object: true
      }));
    })["catch"](function(err) {
      console.log(err);
      return res.send(500, {
        error: err
      });
    });
  };

  wsdl = './lib/russianpost/wsdl/russianpost_1.wsdl';

  Q.nfcall(soap.createClient, wsdl).then(function(client) {
    app.get('/russianpost/:barcode', fetchRussianPost(client));
    return console.log('[INFO] RussianPost client established');
  })["catch"](function(err) {
    return console.error(err);
  }).done();

  app.get('/usps/:barcode', fetchUSPS);

  console.log('[INFO] USPS client established');

  port = process.env.PORT || 3000;

  app.listen(port);

  console.log("[INFO] Listening on port " + port);

}).call(this);
